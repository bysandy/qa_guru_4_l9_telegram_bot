plugins {
    id 'io.qameta.allure' version '2.8.1'
    id 'java-library'
    id 'application'
}

ext.allureVersion = '2.13.8'
ext.junitVersion = '5.6.2'
ext.selenideVersion = '5.18.0'

allure {
    autoconfigure = true
    aspectjweaver = true
    version = allureVersion

    useJUnit5 {
        version = allureVersion
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation([
            'com.codeborne:selenide:' + selenideVersion,
            'io.qameta.allure:allure-java-commons:' + allureVersion,
            'io.qameta.allure:allure-selenide:' + allureVersion,
            'com.github.javafaker:javafaker:1.0.2',
            'org.hamcrest:hamcrest-all:1.3',
            'org.junit.jupiter:junit-jupiter-api:' + junitVersion,
            'org.junit.jupiter:junit-jupiter-params:' + junitVersion
    ])

    testRuntimeOnly([
            'org.junit.jupiter:junit-jupiter-engine:' + junitVersion,
            'org.slf4j:slf4j-simple:1.7.30'
    ])
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties += System.properties
}

task negative_tests(type: Test) {
    useJUnitPlatform {
        includeTags 'negative'
    }
}

test {
    useJUnitPlatform()
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}